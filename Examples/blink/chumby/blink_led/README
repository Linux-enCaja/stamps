Written by Casainho, 2010/06/09.

This code flash the LED on pin 28 of IMX233. It also enables the pins for parallel JTAG, so another code can be run/debugged using JTAG :-)


1st: Build the code doing:
 make clean
 make all

You should see this output:
make all
mkdir -p ./output
arm-none-eabi-gcc -c -O0 -g -Wall -I./include -I/include -nostdinc -fno-builtin -D__ASSEMBLY__ -o src/entry.o src/entry.S
arm-none-eabi-gcc -c -O0 -g -Wall -I./include -I/include -nostdinc -fno-builtin -o src/main.o src/main.c
arm-none-eabi-cpp -P -DBASE_ADDR=0x00002000 -o output/blink_led.ld src/blink_led.ld.in
arm-none-eabi-ld -o output/blink_led.elf ./src/entry.o ./src/main.o -static -nostdlib -T ./output/blink_led.ld -L/home/cas/Documentos/06_software/arm_toolchain/codesourcery_arm_toolchain/bin/../lib/gcc/arm-none-eabi/4.4.1/ -lgcc
arm-none-eabi-objcopy -R -S -O binary -R .note -R .note.gnu.build-id -R .comment output/blink_led.elf output/blink_led.bin

2nd: Use the 'elftosb2' utility to create a sb image, imx233 needs a file/image of this type. Since from factory the encryptition keys are zeros, we do like this:
 ./elftosb2 -V -z -c blink_led.db -o blink_led.bin

3nd: Follow the instructions written by Bob, on file 'Creating_boot_image.txt'.
